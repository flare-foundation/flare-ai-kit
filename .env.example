# ==============================================================================
#                      EXAMPLE ENVIRONMENT CONFIGURATION
# ==============================================================================
#
# INSTRUCTIONS:
# 1. Rename this file from '.env.example' to '.env'.
# 2. Fill in the required variables for your setup.
# 3. DO NOT commit the '.env' file to your version control.
#
# Uncomment the variable to change it from its default value.
# ==============================================================================

# ==============================================================================
#                     CONFIDENTIAL SPACE DEPLOY CONFIGURATION
# ==============================================================================
# Run `gcloud-deploy.sh` to deploy to GCP with the following configuration.

GCP__INSTANCE_NAME=flare-ai-kit
GCP__PROJECT=verifiable-ai-hackathon
GCP__ZONE=us-central1-a
GCP__MACHINE_TYPE=c3-standard-4
GCP__SERVICE_ACCOUNT=confidential-sa@verifiable-ai-hackathon.iam.gserviceaccount.com 
GCP__TEE_IMAGE_REFERENCE=ghcr.io/flare-foundation/flare-ai-kit:main
GCP__IMAGE=confidential-space-debug-250301	
GCP__CONFIDENTIAL_COMPUTE_TYPE=TDX

# ==============================================================================
#                                  CORE
# ==============================================================================

# Logging level (e.g., DEBUG, INFO, WARNING, ERROR, CRITICAL)
# LOG_LEVEL=DEBUG

# ==============================================================================
#                                AGENT LLMs
# ==============================================================================
# You must configure at least one AI provider (Gemini or OpenRouter).

# API key for using Google Gemini (https://aistudio.google.com/app/apikey).
AGENT__GEMINI_API_KEY="your_api_key"

# Gemini model to use (e.g. gemini-2.5-flash, gemini-2.5-pro)
# AGENT__GEMINI_MODEL="gemini-2.5-flash"

# API key for OpenRouter.
# AGENT__OPENROUTER_API_KEY=

# ==============================================================================
#                             FLARE ECOSYSTEM
# ==============================================================================

# --- Network Selection ---

# Set True if interacting with Flare Testnet Coston2.
# ECOSYSTEM__IS_TESTNET=False

# --- Network Connection ---

# Flare RPC endpoint URL.
ECOSYSTEM__WEB3_PROVIDER_URL=https://stylish-light-theorem.flare-mainnet.quiknode.pro/ext/bc/C/rpc
# Example for Coston2 testnet:
# ECOSYSTEM__WEB3_PROVIDER_URL=https://coston2-api.flare.network/ext/C/rpc

# Timeout when interacting with web3 provider (in s).
# ECOSYSTEM__WEB3_PROVIDER_TIMEOUT=5

# --- Block Explorer ---

# Flare Block Explorer URL.
# ECOSYSTEM__BLOCK_EXPLORER_URL=https://flare-explorer.flare.network/api
# Example for Coston2 testnet:
# ECOSYSTEM__BLOCK_EXPLORER_URL=https://coston2-explorer.flare.network/api

# Flare Block Explorer query timeout (in seconds).
# ECOSYSTEM__BLOCK_EXPLORER_TIMEOUT=10

# --- Onchain Transaction Settings ---

# Max retries for Flare transactions.
# ECOSYSTEM__MAX_RETRIES=3

# Delay between retries for Flare transactions (in seconds).
# ECOSYSTEM__RETRY_DELAY=5

# --- Account Wallet ---

# Account address to use when interacting onchain.
# ECOSYSTEM__ACCOUNT_ADDRESS=

# Account private key to use when interacting onchain.
# ECOSYSTEM__ACCOUNT_PRIVATE_KEY=

# --- Contract Addresses: Flare Mainnet ---
# These addresses are used if ECOSYSTEM__IS_TESTNET=False.

# ECOSYSTEM__CONTRACTS__FLARE__SPARKDEX_UNIVERSAL_ROUTER=
# ECOSYSTEM__CONTRACTS__FLARE__SPARKDEX_SWAP_ROUTER=
# ECOSYSTEM__CONTRACTS__FLARE__KINETIC_COMPTROLLER=0x8041680Fb73E1Fe5F851e76233DCDfA0f2D2D7c8
# ECOSYSTEM__CONTRACTS__FLARE__KINETIC_KSFLR=0x291487beC339c2fE5D83DD45F0a15EFC9Ac45656

# --- Contract Addresses: Coston2 Testnet ---
# These addresses are used if ECOSYSTEM__IS_TESTNET=True.

# ECOSYSTEM__CONTRACTS__COSTON2__SPARKDEX_UNIVERSAL_ROUTER=
# ECOSYSTEM__CONTRACTS__COSTON2__SPARKDEX_SWAP_ROUTER=
# ECOSYSTEM__CONTRACTS__COSTON2__KINETIC_COMPTROLLER=0x2754368aF0625CdEE22eb71Ec234421dA543525b
# ECOSYSTEM__CONTRACTS__COSTON2__KINETIC_KSFLR=0x060573e5f5Aa157B2eAa5eeDBef40605ac3bDEFe

# ==============================================================================
#                           VECTOR AND GRAPH DATABASE
# ==============================================================================

# --- Vector Database ---

# Host and port for the Qdrant instance.
# VECTOR_DB__QDRANT_URL=

# Dimension of vectors to use.
VECTOR_DB__QDRANT_VECTOR_SIZE=768

# Batch size for upserting points to Qdrant.
# VECTOR_DB__QDRANT_BATCH_SIZE=100

# DSN for PostgreSQL connection string.
# VECTOR_DB__POSTGRES_DSN=

# --- Vector Embedding Model Settings ---

# Embedding model name (e.g., 'gemini-embedding-exp-03-07').
# VECTOR_DB__EMBEDDINGS_MODEL=gemini-embedding-exp-03-07

# Reduced dimension for the output embedding. Leave None for max.
# VECTOR_DB__EMBEDDINGS_OUTPUT_DIMENSIONALITY=

# --- Graph Database ---

# Connection URI for the Neo4j database.
GRAPH_DB__NEO4J_URI=neo4j://localhost:7687

# The name of the specific Neo4j database.
# GRAPH_DB__NEO4J_DATABASE=neo4j

# ==============================================================================
#                               SOCIAL MEDIA
# ==============================================================================

# --- X ---

# API key for X.
SOCIAL__X_API_KEY="your_x_api_key"

# API key secret for X.
# SOCIAL__X_API_KEY_SECRET=

# Access token key for X.
# SOCIAL__X_ACCESS_TOKEN=

# Access token secret for X.
# SOCIAL__X_ACCESS_TOKEN_SECRET=

# --- Telegram ---

# API key for Telegram.
# SOCIAL__TELEGRAM_API_TOKEN=

# ==============================================================================
#                      TRUSTED EXECUTION ENVIRONMENT (TEE)
# ==============================================================================

# Use a pregenerated attestation token for testing.
TEE__SIMULATE_ATTESTATION_TOKEN=true

# ==============================================================================
#                               DATA INGESTION
# ==============================================================================

# --- Ingestion Embedding ---

# Target size for text chunks before embedding (in characters).
INGESTION__CHUNK_SIZE=5000

# Overlap between consecutive text chunks (in characters).
# INGESTION__CHUNK_OVERLAP=500

# --- GitHub Indexer ---

# File extensions indexed by the indexer.
# INGESTION__GITHUB_ALLOWED_EXTENSIONS={'.cs', '.php', '.rst', '.java', '.txt', '.c', '.cpp', 'Dockerfile', '.html', '.css', '.md', '.hpp', '.sh', '.jsx', '.toml', '.scss', '.ipynb', '.rs', '.tf', '.tsx', '.go', '.js', '.kt', '.dockerfile', '.swift', '.h', '.env.example', '.yml', '.py', '.scala', '.yaml', '.ts', '.json', '.rb'}

# Directories ignored by the indexer.
# INGESTION__GITHUB_IGNORED_DIRS={'venv', '.git', '__pycache__', '.venv', 'build', 'node_modules', 'target'}

# Files ignored by the indexer.
# INGESTION__GITHUB_IGNORED_FILES={'uv.lock', 'poetry.lock', 'package-lock.json', 'Pipfile.lock', 'yarn.lock'}
